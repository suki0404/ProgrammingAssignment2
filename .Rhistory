getwd()
add2<- function(x,y){x+y}
add2(3,5)
above <- function(x,n) {
use <- x>n
x[use]
}
x<- 1:20
above(x,12)
above <- function(x, n=10) {
use <- x>n
x[use]
}
above(12)
above(x)
y<-10
f<-function(x){
y<-2
y^2+g(x)
}
g<-function(x){
x*y
}
f(3)
f(3)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
pollutantmean
pollutantmean()
pollutantmean<-function(directory, pollutant, id=1:200){
q
q()
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source('~/Desktop/assignment3/ProgrammingAssignment2/cachematrix.R')
setwd("~/Desktop/assignment3/ProgrammingAssignment2")
rm(list=ls())
clear
clean
source('~/Desktop/assignment3/ProgrammingAssignment2/cachematrix.R')
mymatrix<-makeCacheMatrix(matrix(1:4),2,2)
mymatrix<-makeCacheMatrix(matrix(1:4,2,2)
)
mymatrix$getInverse()
mymatrix$setInverse()
mymatrix$get()
x
cacheSolve(mymatrix)
source('~/Desktop/assignment3/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mymatrix)
mymatrix<-makeCacheMatrix(matrix(2:5,2,2)
)
cacheSolve(mymatrix)
## Getting the inverse of 'x', if there is saved data, message; if not, get inverse.
mymatrix<cachedMatix(matrix(3:6,2,2))
View(makeCacheMatrix)
mymatrix<cachedMatix(matrix(3:6,2,2))
mymatrix<makeCachedMatix(matrix(3:6,2,2))
mymatrix<makeCacheMatix(matrix(3:6,2,2))
mymatrix<-makeCacheMatrix(matrix(2:5,2,2))
